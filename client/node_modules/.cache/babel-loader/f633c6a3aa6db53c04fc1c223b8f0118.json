{"ast":null,"code":"import { JOSEError, JWKSTimeout } from '../util/errors.js';\n\nconst fetchJwks = async (url, timeout, options) => {\n  let controller;\n  let id;\n  let timedOut = false;\n\n  if (typeof AbortController === 'function') {\n    controller = new AbortController();\n    id = setTimeout(() => {\n      timedOut = true;\n      controller.abort();\n    }, timeout);\n  }\n\n  const response = await fetch(url.href, {\n    signal: controller ? controller.signal : undefined,\n    redirect: 'manual',\n    headers: options.headers\n  }).catch(err => {\n    if (timedOut) throw new JWKSTimeout();\n    throw err;\n  });\n  if (id !== undefined) clearTimeout(id);\n\n  if (response.status !== 200) {\n    throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n  }\n\n  try {\n    return await response.json();\n  } catch (_a) {\n    throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n  }\n};\n\nexport default fetchJwks;","map":{"version":3,"names":["JOSEError","JWKSTimeout","fetchJwks","url","timeout","options","controller","id","timedOut","AbortController","setTimeout","abort","response","fetch","href","signal","undefined","redirect","headers","catch","err","clearTimeout","status","json","_a"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/runtime/fetch_jwks.js"],"sourcesContent":["import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch (_a) {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,mBAAvC;;AACA,MAAMC,SAAS,GAAG,OAAOC,GAAP,EAAYC,OAAZ,EAAqBC,OAArB,KAAiC;EAC/C,IAAIC,UAAJ;EACA,IAAIC,EAAJ;EACA,IAAIC,QAAQ,GAAG,KAAf;;EACA,IAAI,OAAOC,eAAP,KAA2B,UAA/B,EAA2C;IACvCH,UAAU,GAAG,IAAIG,eAAJ,EAAb;IACAF,EAAE,GAAGG,UAAU,CAAC,MAAM;MAClBF,QAAQ,GAAG,IAAX;MACAF,UAAU,CAACK,KAAX;IACH,CAHc,EAGZP,OAHY,CAAf;EAIH;;EACD,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAACW,IAAL,EAAW;IACnCC,MAAM,EAAET,UAAU,GAAGA,UAAU,CAACS,MAAd,GAAuBC,SADN;IAEnCC,QAAQ,EAAE,QAFyB;IAGnCC,OAAO,EAAEb,OAAO,CAACa;EAHkB,CAAX,CAAL,CAIpBC,KAJoB,CAIbC,GAAD,IAAS;IACd,IAAIZ,QAAJ,EACI,MAAM,IAAIP,WAAJ,EAAN;IACJ,MAAMmB,GAAN;EACH,CARsB,CAAvB;EASA,IAAIb,EAAE,KAAKS,SAAX,EACIK,YAAY,CAACd,EAAD,CAAZ;;EACJ,IAAIK,QAAQ,CAACU,MAAT,KAAoB,GAAxB,EAA6B;IACzB,MAAM,IAAItB,SAAJ,CAAc,yDAAd,CAAN;EACH;;EACD,IAAI;IACA,OAAO,MAAMY,QAAQ,CAACW,IAAT,EAAb;EACH,CAFD,CAGA,OAAOC,EAAP,EAAW;IACP,MAAM,IAAIxB,SAAJ,CAAc,4DAAd,CAAN;EACH;AACJ,CA/BD;;AAgCA,eAAeE,SAAf"},"metadata":{},"sourceType":"module"}