{"ast":null,"code":"import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\n\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n  if (!(cek instanceof Uint8Array)) {\n    throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n  }\n\n  const keySize = parseInt(enc.slice(1, 4), 10);\n  const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n  const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n    hash: `SHA-${keySize << 1}`,\n    name: 'HMAC'\n  }, false, ['sign']);\n  const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n  const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n  let macCheckPassed;\n\n  try {\n    macCheckPassed = timingSafeEqual(tag, expectedTag);\n  } catch (_a) {}\n\n  if (!macCheckPassed) {\n    throw new JWEDecryptionFailed();\n  }\n\n  let plaintext;\n\n  try {\n    plaintext = new Uint8Array(await crypto.subtle.decrypt({\n      iv,\n      name: 'AES-CBC'\n    }, encKey, ciphertext));\n  } catch (_b) {}\n\n  if (!plaintext) {\n    throw new JWEDecryptionFailed();\n  }\n\n  return plaintext;\n}\n\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n  let encKey;\n\n  if (cek instanceof Uint8Array) {\n    encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n  } else {\n    checkEncCryptoKey(cek, enc, 'decrypt');\n    encKey = cek;\n  }\n\n  try {\n    return new Uint8Array(await crypto.subtle.decrypt({\n      additionalData: aad,\n      iv,\n      name: 'AES-GCM',\n      tagLength: 128\n    }, encKey, concat(ciphertext, tag)));\n  } catch (_a) {\n    throw new JWEDecryptionFailed();\n  }\n}\n\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n  if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n    throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n  }\n\n  checkIvLength(enc, iv);\n\n  switch (enc) {\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      if (cek instanceof Uint8Array) checkCekLength(cek, parseInt(enc.slice(-3), 10));\n      return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      if (cek instanceof Uint8Array) checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n      return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n\n    default:\n      throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n  }\n};\n\nexport default decrypt;","map":{"version":3,"names":["concat","uint64be","checkIvLength","checkCekLength","timingSafeEqual","JOSENotSupported","JWEDecryptionFailed","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","types","cbcDecrypt","enc","cek","ciphertext","iv","tag","aad","Uint8Array","TypeError","keySize","parseInt","slice","encKey","subtle","importKey","subarray","macKey","hash","name","macData","length","expectedTag","sign","macCheckPassed","_a","plaintext","decrypt","_b","gcmDecrypt","additionalData","tagLength"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/runtime/decrypt.js"],"sourcesContent":["import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch (_a) {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch (_b) {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch (_a) {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}