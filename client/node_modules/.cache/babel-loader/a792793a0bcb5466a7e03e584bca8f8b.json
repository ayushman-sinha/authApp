{"ast":null,"code":"import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n  if (jwe instanceof Uint8Array) {\n    jwe = decoder.decode(jwe);\n  }\n\n  if (typeof jwe !== 'string') {\n    throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n  }\n\n  const {\n    0: protectedHeader,\n    1: encryptedKey,\n    2: iv,\n    3: ciphertext,\n    4: tag,\n    length\n  } = jwe.split('.');\n\n  if (length !== 5) {\n    throw new JWEInvalid('Invalid Compact JWE');\n  }\n\n  const decrypted = await flattenedDecrypt({\n    ciphertext,\n    iv: iv || undefined,\n    protected: protectedHeader || undefined,\n    tag: tag || undefined,\n    encrypted_key: encryptedKey || undefined\n  }, key, options);\n  const result = {\n    plaintext: decrypted.plaintext,\n    protectedHeader: decrypted.protectedHeader\n  };\n\n  if (typeof key === 'function') {\n    return { ...result,\n      key: decrypted.key\n    };\n  }\n\n  return result;\n}","map":{"version":3,"names":["flattenedDecrypt","JWEInvalid","decoder","compactDecrypt","jwe","key","options","Uint8Array","decode","protectedHeader","encryptedKey","iv","ciphertext","tag","length","split","decrypted","undefined","protected","encrypted_key","result","plaintext"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/jwe/compact/decrypt.js"],"sourcesContent":["import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,yBAAjC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAO,eAAeC,cAAf,CAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,OAAxC,EAAiD;EACpD,IAAIF,GAAG,YAAYG,UAAnB,EAA+B;IAC3BH,GAAG,GAAGF,OAAO,CAACM,MAAR,CAAeJ,GAAf,CAAN;EACH;;EACD,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IACzB,MAAM,IAAIH,UAAJ,CAAe,4CAAf,CAAN;EACH;;EACD,MAAM;IAAE,GAAGQ,eAAL;IAAsB,GAAGC,YAAzB;IAAuC,GAAGC,EAA1C;IAA8C,GAAGC,UAAjD;IAA6D,GAAGC,GAAhE;IAAqEC;EAArE,IAAiFV,GAAG,CAACW,KAAJ,CAAU,GAAV,CAAvF;;EACA,IAAID,MAAM,KAAK,CAAf,EAAkB;IACd,MAAM,IAAIb,UAAJ,CAAe,qBAAf,CAAN;EACH;;EACD,MAAMe,SAAS,GAAG,MAAMhB,gBAAgB,CAAC;IACrCY,UADqC;IAErCD,EAAE,EAAGA,EAAE,IAAIM,SAF0B;IAGrCC,SAAS,EAAET,eAAe,IAAIQ,SAHO;IAIrCJ,GAAG,EAAGA,GAAG,IAAII,SAJwB;IAKrCE,aAAa,EAAET,YAAY,IAAIO;EALM,CAAD,EAMrCZ,GANqC,EAMhCC,OANgC,CAAxC;EAOA,MAAMc,MAAM,GAAG;IAAEC,SAAS,EAAEL,SAAS,CAACK,SAAvB;IAAkCZ,eAAe,EAAEO,SAAS,CAACP;EAA7D,CAAf;;EACA,IAAI,OAAOJ,GAAP,KAAe,UAAnB,EAA+B;IAC3B,OAAO,EAAE,GAAGe,MAAL;MAAaf,GAAG,EAAEW,SAAS,CAACX;IAA5B,CAAP;EACH;;EACD,OAAOe,MAAP;AACH"},"metadata":{},"sourceType":"module"}