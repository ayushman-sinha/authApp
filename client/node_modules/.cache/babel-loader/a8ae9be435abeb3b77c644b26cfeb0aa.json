{"ast":null,"code":"import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = input => {\n  let unencoded = input;\n\n  if (typeof unencoded === 'string') {\n    unencoded = encoder.encode(unencoded);\n  }\n\n  const CHUNK_SIZE = 0x8000;\n  const arr = [];\n\n  for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n    arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n  }\n\n  return btoa(arr.join(''));\n};\nexport const encode = input => {\n  return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = encoded => {\n  const binary = atob(encoded);\n  const bytes = new Uint8Array(binary.length);\n\n  for (let i = 0; i < binary.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n\n  return bytes;\n};\nexport const decode = input => {\n  let encoded = input;\n\n  if (encoded instanceof Uint8Array) {\n    encoded = decoder.decode(encoded);\n  }\n\n  encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n\n  try {\n    return decodeBase64(encoded);\n  } catch (_a) {\n    throw new TypeError('The input to be decoded is not correctly encoded.');\n  }\n};","map":{"version":3,"names":["encoder","decoder","encodeBase64","input","unencoded","encode","CHUNK_SIZE","arr","i","length","push","String","fromCharCode","apply","subarray","btoa","join","replace","decodeBase64","encoded","binary","atob","bytes","Uint8Array","charCodeAt","decode","_a","TypeError"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/runtime/base64url.js"],"sourcesContent":["import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,wBAAjC;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;EACnC,IAAIC,SAAS,GAAGD,KAAhB;;EACA,IAAI,OAAOC,SAAP,KAAqB,QAAzB,EAAmC;IAC/BA,SAAS,GAAGJ,OAAO,CAACK,MAAR,CAAeD,SAAf,CAAZ;EACH;;EACD,MAAME,UAAU,GAAG,MAAnB;EACA,MAAMC,GAAG,GAAG,EAAZ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACK,MAA9B,EAAsCD,CAAC,IAAIF,UAA3C,EAAuD;IACnDC,GAAG,CAACG,IAAJ,CAASC,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgCT,SAAS,CAACU,QAAV,CAAmBN,CAAnB,EAAsBA,CAAC,GAAGF,UAA1B,CAAhC,CAAT;EACH;;EACD,OAAOS,IAAI,CAACR,GAAG,CAACS,IAAJ,CAAS,EAAT,CAAD,CAAX;AACH,CAXM;AAYP,OAAO,MAAMX,MAAM,GAAIF,KAAD,IAAW;EAC7B,OAAOD,YAAY,CAACC,KAAD,CAAZ,CAAoBc,OAApB,CAA4B,IAA5B,EAAkC,EAAlC,EAAsCA,OAAtC,CAA8C,KAA9C,EAAqD,GAArD,EAA0DA,OAA1D,CAAkE,KAAlE,EAAyE,GAAzE,CAAP;AACH,CAFM;AAGP,OAAO,MAAMC,YAAY,GAAIC,OAAD,IAAa;EACrC,MAAMC,MAAM,GAAGC,IAAI,CAACF,OAAD,CAAnB;EACA,MAAMG,KAAK,GAAG,IAAIC,UAAJ,CAAeH,MAAM,CAACX,MAAtB,CAAd;;EACA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,MAAM,CAACX,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;IACpCc,KAAK,CAACd,CAAD,CAAL,GAAWY,MAAM,CAACI,UAAP,CAAkBhB,CAAlB,CAAX;EACH;;EACD,OAAOc,KAAP;AACH,CAPM;AAQP,OAAO,MAAMG,MAAM,GAAItB,KAAD,IAAW;EAC7B,IAAIgB,OAAO,GAAGhB,KAAd;;EACA,IAAIgB,OAAO,YAAYI,UAAvB,EAAmC;IAC/BJ,OAAO,GAAGlB,OAAO,CAACwB,MAAR,CAAeN,OAAf,CAAV;EACH;;EACDA,OAAO,GAAGA,OAAO,CAACF,OAAR,CAAgB,IAAhB,EAAsB,GAAtB,EAA2BA,OAA3B,CAAmC,IAAnC,EAAyC,GAAzC,EAA8CA,OAA9C,CAAsD,KAAtD,EAA6D,EAA7D,CAAV;;EACA,IAAI;IACA,OAAOC,YAAY,CAACC,OAAD,CAAnB;EACH,CAFD,CAGA,OAAOO,EAAP,EAAW;IACP,MAAM,IAAIC,SAAJ,CAAc,mDAAd,CAAN;EACH;AACJ,CAZM"},"metadata":{},"sourceType":"module"}