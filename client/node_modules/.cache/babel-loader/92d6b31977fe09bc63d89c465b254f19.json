{"ast":null,"code":"import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  const size = buffers.reduce((acc, _ref) => {\n    let {\n      length\n    } = _ref;\n    return acc + length;\n  }, 0);\n  const buf = new Uint8Array(size);\n  let i = 0;\n  buffers.forEach(buffer => {\n    buf.set(buffer, i);\n    i += buffer.length;\n  });\n  return buf;\n}\nexport function p2s(alg, p2sInput) {\n  return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\n\nfunction writeUInt32BE(buf, value, offset) {\n  if (value < 0 || value >= MAX_INT32) {\n    throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n  }\n\n  buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\n\nexport function uint64be(value) {\n  const high = Math.floor(value / MAX_INT32);\n  const low = value % MAX_INT32;\n  const buf = new Uint8Array(8);\n  writeUInt32BE(buf, high, 0);\n  writeUInt32BE(buf, low, 4);\n  return buf;\n}\nexport function uint32be(value) {\n  const buf = new Uint8Array(4);\n  writeUInt32BE(buf, value);\n  return buf;\n}\nexport function lengthAndInput(input) {\n  return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n  const iterations = Math.ceil((bits >> 3) / 32);\n  const res = new Uint8Array(iterations * 32);\n\n  for (let iter = 0; iter < iterations; iter++) {\n    const buf = new Uint8Array(4 + secret.length + value.length);\n    buf.set(uint32be(iter + 1));\n    buf.set(secret, 4);\n    buf.set(value, 4 + secret.length);\n    res.set(await digest('sha256', buf), iter * 32);\n  }\n\n  return res.slice(0, bits >> 3);\n}","map":{"version":3,"names":["digest","encoder","TextEncoder","decoder","TextDecoder","MAX_INT32","concat","buffers","size","reduce","acc","length","buf","Uint8Array","i","forEach","buffer","set","p2s","alg","p2sInput","encode","writeUInt32BE","value","offset","RangeError","uint64be","high","Math","floor","low","uint32be","lengthAndInput","input","concatKdf","secret","bits","iterations","ceil","res","iter","slice"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/lib/buffer_utils.js"],"sourcesContent":["import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAO,MAAMC,OAAO,GAAG,IAAIC,WAAJ,EAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,IAAIC,WAAJ,EAAhB;AACP,MAAMC,SAAS,GAAG,KAAK,EAAvB;AACA,OAAO,SAASC,MAAT,GAA4B;EAAA,kCAATC,OAAS;IAATA,OAAS;EAAA;;EAC/B,MAAMC,IAAI,GAAGD,OAAO,CAACE,MAAR,CAAe,CAACC,GAAD;IAAA,IAAM;MAAEC;IAAF,CAAN;IAAA,OAAqBD,GAAG,GAAGC,MAA3B;EAAA,CAAf,EAAkD,CAAlD,CAAb;EACA,MAAMC,GAAG,GAAG,IAAIC,UAAJ,CAAeL,IAAf,CAAZ;EACA,IAAIM,CAAC,GAAG,CAAR;EACAP,OAAO,CAACQ,OAAR,CAAiBC,MAAD,IAAY;IACxBJ,GAAG,CAACK,GAAJ,CAAQD,MAAR,EAAgBF,CAAhB;IACAA,CAAC,IAAIE,MAAM,CAACL,MAAZ;EACH,CAHD;EAIA,OAAOC,GAAP;AACH;AACD,OAAO,SAASM,GAAT,CAAaC,GAAb,EAAkBC,QAAlB,EAA4B;EAC/B,OAAOd,MAAM,CAACL,OAAO,CAACoB,MAAR,CAAeF,GAAf,CAAD,EAAsB,IAAIN,UAAJ,CAAe,CAAC,CAAD,CAAf,CAAtB,EAA2CO,QAA3C,CAAb;AACH;;AACD,SAASE,aAAT,CAAuBV,GAAvB,EAA4BW,KAA5B,EAAmCC,MAAnC,EAA2C;EACvC,IAAID,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAIlB,SAA1B,EAAqC;IACjC,MAAM,IAAIoB,UAAJ,CAAgB,6BAA4BpB,SAAS,GAAG,CAAE,cAAakB,KAAM,EAA7E,CAAN;EACH;;EACDX,GAAG,CAACK,GAAJ,CAAQ,CAACM,KAAK,KAAK,EAAX,EAAeA,KAAK,KAAK,EAAzB,EAA6BA,KAAK,KAAK,CAAvC,EAA0CA,KAAK,GAAG,IAAlD,CAAR,EAAiEC,MAAjE;AACH;;AACD,OAAO,SAASE,QAAT,CAAkBH,KAAlB,EAAyB;EAC5B,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAGlB,SAAnB,CAAb;EACA,MAAMyB,GAAG,GAAGP,KAAK,GAAGlB,SAApB;EACA,MAAMO,GAAG,GAAG,IAAIC,UAAJ,CAAe,CAAf,CAAZ;EACAS,aAAa,CAACV,GAAD,EAAMe,IAAN,EAAY,CAAZ,CAAb;EACAL,aAAa,CAACV,GAAD,EAAMkB,GAAN,EAAW,CAAX,CAAb;EACA,OAAOlB,GAAP;AACH;AACD,OAAO,SAASmB,QAAT,CAAkBR,KAAlB,EAAyB;EAC5B,MAAMX,GAAG,GAAG,IAAIC,UAAJ,CAAe,CAAf,CAAZ;EACAS,aAAa,CAACV,GAAD,EAAMW,KAAN,CAAb;EACA,OAAOX,GAAP;AACH;AACD,OAAO,SAASoB,cAAT,CAAwBC,KAAxB,EAA+B;EAClC,OAAO3B,MAAM,CAACyB,QAAQ,CAACE,KAAK,CAACtB,MAAP,CAAT,EAAyBsB,KAAzB,CAAb;AACH;AACD,OAAO,eAAeC,SAAf,CAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCb,KAAvC,EAA8C;EACjD,MAAMc,UAAU,GAAGT,IAAI,CAACU,IAAL,CAAU,CAACF,IAAI,IAAI,CAAT,IAAc,EAAxB,CAAnB;EACA,MAAMG,GAAG,GAAG,IAAI1B,UAAJ,CAAewB,UAAU,GAAG,EAA5B,CAAZ;;EACA,KAAK,IAAIG,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGH,UAA1B,EAAsCG,IAAI,EAA1C,EAA8C;IAC1C,MAAM5B,GAAG,GAAG,IAAIC,UAAJ,CAAe,IAAIsB,MAAM,CAACxB,MAAX,GAAoBY,KAAK,CAACZ,MAAzC,CAAZ;IACAC,GAAG,CAACK,GAAJ,CAAQc,QAAQ,CAACS,IAAI,GAAG,CAAR,CAAhB;IACA5B,GAAG,CAACK,GAAJ,CAAQkB,MAAR,EAAgB,CAAhB;IACAvB,GAAG,CAACK,GAAJ,CAAQM,KAAR,EAAe,IAAIY,MAAM,CAACxB,MAA1B;IACA4B,GAAG,CAACtB,GAAJ,CAAQ,MAAMjB,MAAM,CAAC,QAAD,EAAWY,GAAX,CAApB,EAAqC4B,IAAI,GAAG,EAA5C;EACH;;EACD,OAAOD,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAaL,IAAI,IAAI,CAArB,CAAP;AACH"},"metadata":{},"sourceType":"module"}