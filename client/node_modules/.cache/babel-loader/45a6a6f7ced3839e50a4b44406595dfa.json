{"ast":null,"code":"import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength) {\n  let apu = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : new Uint8Array(0);\n  let apv = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new Uint8Array(0);\n\n  if (!isCryptoKey(publicKey)) {\n    throw new TypeError(invalidKeyInput(publicKey, ...types));\n  }\n\n  checkEncCryptoKey(publicKey, 'ECDH');\n\n  if (!isCryptoKey(privateKey)) {\n    throw new TypeError(invalidKeyInput(privateKey, ...types));\n  }\n\n  checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n  const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n  const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n    name: 'ECDH',\n    public: publicKey\n  }, privateKey, Math.ceil(parseInt(privateKey.algorithm.namedCurve.slice(-3), 10) / 8) << 3));\n  return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n  if (!isCryptoKey(key)) {\n    throw new TypeError(invalidKeyInput(key, ...types));\n  }\n\n  return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n  if (!isCryptoKey(key)) {\n    throw new TypeError(invalidKeyInput(key, ...types));\n  }\n\n  return ['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve);\n}","map":{"version":3,"names":["encoder","concat","uint32be","lengthAndInput","concatKdf","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","types","deriveKey","publicKey","privateKey","algorithm","keyLength","apu","Uint8Array","apv","TypeError","value","encode","sharedSecret","subtle","deriveBits","name","public","Math","ceil","parseInt","namedCurve","slice","generateEpk","key","generateKey","ecdhAllowed","includes"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/runtime/ecdhes.js"],"sourcesContent":["import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    if (!isCryptoKey(publicKey)) {\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\n    }\n    checkEncCryptoKey(publicKey, 'ECDH');\n    if (!isCryptoKey(privateKey)) {\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\n    }\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n        name: 'ECDH',\n        public: publicKey,\n    }, privateKey, Math.ceil(parseInt(privateKey.algorithm.namedCurve.slice(-3), 10) / 8) << 3));\n    return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return ['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve);\n}\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,EAA0BC,QAA1B,EAAoCC,cAApC,EAAoDC,SAApD,QAAqE,wBAArE;AACA,OAAOC,MAAP,IAAiBC,WAAjB,QAAoC,gBAApC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,eAAeC,SAAf,CAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2DC,SAA3D,EAAwH;EAAA,IAAlDC,GAAkD,uEAA5C,IAAIC,UAAJ,CAAe,CAAf,CAA4C;EAAA,IAAzBC,GAAyB,uEAAnB,IAAID,UAAJ,CAAe,CAAf,CAAmB;;EAC3H,IAAI,CAACV,WAAW,CAACK,SAAD,CAAhB,EAA6B;IACzB,MAAM,IAAIO,SAAJ,CAAcV,eAAe,CAACG,SAAD,EAAY,GAAGF,KAAf,CAA7B,CAAN;EACH;;EACDF,iBAAiB,CAACI,SAAD,EAAY,MAAZ,CAAjB;;EACA,IAAI,CAACL,WAAW,CAACM,UAAD,CAAhB,EAA8B;IAC1B,MAAM,IAAIM,SAAJ,CAAcV,eAAe,CAACI,UAAD,EAAa,GAAGH,KAAhB,CAA7B,CAAN;EACH;;EACDF,iBAAiB,CAACK,UAAD,EAAa,MAAb,EAAqB,YAArB,CAAjB;EACA,MAAMO,KAAK,GAAGlB,MAAM,CAACE,cAAc,CAACH,OAAO,CAACoB,MAAR,CAAeP,SAAf,CAAD,CAAf,EAA4CV,cAAc,CAACY,GAAD,CAA1D,EAAiEZ,cAAc,CAACc,GAAD,CAA/E,EAAsFf,QAAQ,CAACY,SAAD,CAA9F,CAApB;EACA,MAAMO,YAAY,GAAG,IAAIL,UAAJ,CAAe,MAAMX,MAAM,CAACiB,MAAP,CAAcC,UAAd,CAAyB;IAC/DC,IAAI,EAAE,MADyD;IAE/DC,MAAM,EAAEd;EAFuD,CAAzB,EAGvCC,UAHuC,EAG3Bc,IAAI,CAACC,IAAL,CAAUC,QAAQ,CAAChB,UAAU,CAACC,SAAX,CAAqBgB,UAArB,CAAgCC,KAAhC,CAAsC,CAAC,CAAvC,CAAD,EAA4C,EAA5C,CAAR,GAA0D,CAApE,KAA0E,CAH/C,CAArB,CAArB;EAIA,OAAO1B,SAAS,CAACiB,YAAD,EAAeP,SAAf,EAA0BK,KAA1B,CAAhB;AACH;AACD,OAAO,eAAeY,WAAf,CAA2BC,GAA3B,EAAgC;EACnC,IAAI,CAAC1B,WAAW,CAAC0B,GAAD,CAAhB,EAAuB;IACnB,MAAM,IAAId,SAAJ,CAAcV,eAAe,CAACwB,GAAD,EAAM,GAAGvB,KAAT,CAA7B,CAAN;EACH;;EACD,OAAOJ,MAAM,CAACiB,MAAP,CAAcW,WAAd,CAA0BD,GAAG,CAACnB,SAA9B,EAAyC,IAAzC,EAA+C,CAAC,YAAD,CAA/C,CAAP;AACH;AACD,OAAO,SAASqB,WAAT,CAAqBF,GAArB,EAA0B;EAC7B,IAAI,CAAC1B,WAAW,CAAC0B,GAAD,CAAhB,EAAuB;IACnB,MAAM,IAAId,SAAJ,CAAcV,eAAe,CAACwB,GAAD,EAAM,GAAGvB,KAAT,CAA7B,CAAN;EACH;;EACD,OAAO,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B0B,QAA5B,CAAqCH,GAAG,CAACnB,SAAJ,CAAcgB,UAAnD,CAAP;AACH"},"metadata":{},"sourceType":"module"}