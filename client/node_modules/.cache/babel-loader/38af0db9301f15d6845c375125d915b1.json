{"ast":null,"code":"const validateAlgorithms = (option, algorithms) => {\n  if (algorithms !== undefined && (!Array.isArray(algorithms) || algorithms.some(s => typeof s !== 'string'))) {\n    throw new TypeError(`\"${option}\" option must be an array of strings`);\n  }\n\n  if (!algorithms) {\n    return undefined;\n  }\n\n  return new Set(algorithms);\n};\n\nexport default validateAlgorithms;","map":{"version":3,"names":["validateAlgorithms","option","algorithms","undefined","Array","isArray","some","s","TypeError","Set"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/lib/validate_algorithms.js"],"sourcesContent":["const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n"],"mappings":"AAAA,MAAMA,kBAAkB,GAAG,CAACC,MAAD,EAASC,UAAT,KAAwB;EAC/C,IAAIA,UAAU,KAAKC,SAAf,KACC,CAACC,KAAK,CAACC,OAAN,CAAcH,UAAd,CAAD,IAA8BA,UAAU,CAACI,IAAX,CAAiBC,CAAD,IAAO,OAAOA,CAAP,KAAa,QAApC,CAD/B,CAAJ,EACmF;IAC/E,MAAM,IAAIC,SAAJ,CAAe,IAAGP,MAAO,sCAAzB,CAAN;EACH;;EACD,IAAI,CAACC,UAAL,EAAiB;IACb,OAAOC,SAAP;EACH;;EACD,OAAO,IAAIM,GAAJ,CAAQP,UAAR,CAAP;AACH,CATD;;AAUA,eAAeF,kBAAf"},"metadata":{},"sourceType":"module"}