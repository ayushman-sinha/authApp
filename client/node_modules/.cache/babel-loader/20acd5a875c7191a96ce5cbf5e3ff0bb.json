{"ast":null,"code":"import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\n\nfunction checkKeySize(key, alg) {\n  if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n    throw new TypeError(`Invalid key size for alg: ${alg}`);\n  }\n}\n\nfunction getCryptoKey(key, alg, usage) {\n  if (isCryptoKey(key)) {\n    checkEncCryptoKey(key, alg, usage);\n    return key;\n  }\n\n  if (key instanceof Uint8Array) {\n    return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n  }\n\n  throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\n\nexport const wrap = async (alg, key, cek) => {\n  const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n  checkKeySize(cryptoKey, alg);\n  const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n  return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n  const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n  checkKeySize(cryptoKey, alg);\n  const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n  return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};","map":{"version":3,"names":["bogusWebCrypto","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","types","checkKeySize","key","alg","algorithm","length","parseInt","slice","TypeError","getCryptoKey","usage","Uint8Array","subtle","importKey","wrap","cek","cryptoKey","cryptoKeyCek","wrapKey","unwrap","encryptedKey","unwrapKey","exportKey"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/runtime/aeskw.js"],"sourcesContent":["import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,YAA3B;AACA,OAAOC,MAAP,IAAiBC,WAAjB,QAAoC,gBAApC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AACA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;EAC5B,IAAID,GAAG,CAACE,SAAJ,CAAcC,MAAd,KAAyBC,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CAArC,EAA4D;IACxD,MAAM,IAAIC,SAAJ,CAAe,6BAA4BL,GAAI,EAA/C,CAAN;EACH;AACJ;;AACD,SAASM,YAAT,CAAsBP,GAAtB,EAA2BC,GAA3B,EAAgCO,KAAhC,EAAuC;EACnC,IAAIb,WAAW,CAACK,GAAD,CAAf,EAAsB;IAClBJ,iBAAiB,CAACI,GAAD,EAAMC,GAAN,EAAWO,KAAX,CAAjB;IACA,OAAOR,GAAP;EACH;;EACD,IAAIA,GAAG,YAAYS,UAAnB,EAA+B;IAC3B,OAAOf,MAAM,CAACgB,MAAP,CAAcC,SAAd,CAAwB,KAAxB,EAA+BX,GAA/B,EAAoC,QAApC,EAA8C,IAA9C,EAAoD,CAACQ,KAAD,CAApD,CAAP;EACH;;EACD,MAAM,IAAIF,SAAJ,CAAcT,eAAe,CAACG,GAAD,EAAM,GAAGF,KAAT,EAAgB,YAAhB,CAA7B,CAAN;AACH;;AACD,OAAO,MAAMc,IAAI,GAAG,OAAOX,GAAP,EAAYD,GAAZ,EAAiBa,GAAjB,KAAyB;EACzC,MAAMC,SAAS,GAAG,MAAMP,YAAY,CAACP,GAAD,EAAMC,GAAN,EAAW,SAAX,CAApC;EACAF,YAAY,CAACe,SAAD,EAAYb,GAAZ,CAAZ;EACA,MAAMc,YAAY,GAAG,MAAMrB,MAAM,CAACgB,MAAP,CAAcC,SAAd,CAAwB,KAAxB,EAA+BE,GAA/B,EAAoC,GAAGpB,cAAvC,CAA3B;EACA,OAAO,IAAIgB,UAAJ,CAAe,MAAMf,MAAM,CAACgB,MAAP,CAAcM,OAAd,CAAsB,KAAtB,EAA6BD,YAA7B,EAA2CD,SAA3C,EAAsD,QAAtD,CAArB,CAAP;AACH,CALM;AAMP,OAAO,MAAMG,MAAM,GAAG,OAAOhB,GAAP,EAAYD,GAAZ,EAAiBkB,YAAjB,KAAkC;EACpD,MAAMJ,SAAS,GAAG,MAAMP,YAAY,CAACP,GAAD,EAAMC,GAAN,EAAW,WAAX,CAApC;EACAF,YAAY,CAACe,SAAD,EAAYb,GAAZ,CAAZ;EACA,MAAMc,YAAY,GAAG,MAAMrB,MAAM,CAACgB,MAAP,CAAcS,SAAd,CAAwB,KAAxB,EAA+BD,YAA/B,EAA6CJ,SAA7C,EAAwD,QAAxD,EAAkE,GAAGrB,cAArE,CAA3B;EACA,OAAO,IAAIgB,UAAJ,CAAe,MAAMf,MAAM,CAACgB,MAAP,CAAcU,SAAd,CAAwB,KAAxB,EAA+BL,YAA/B,CAArB,CAAP;AACH,CALM"},"metadata":{},"sourceType":"module"}