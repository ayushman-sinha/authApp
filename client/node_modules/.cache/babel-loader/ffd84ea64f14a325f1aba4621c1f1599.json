{"ast":null,"code":"import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n  if (!isObject(jwe)) {\n    throw new JWEInvalid('General JWE must be an object');\n  }\n\n  if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n    throw new JWEInvalid('JWE Recipients missing or incorrect type');\n  }\n\n  if (!jwe.recipients.length) {\n    throw new JWEInvalid('JWE Recipients has no members');\n  }\n\n  for (const recipient of jwe.recipients) {\n    try {\n      return await flattenedDecrypt({\n        aad: jwe.aad,\n        ciphertext: jwe.ciphertext,\n        encrypted_key: recipient.encrypted_key,\n        header: recipient.header,\n        iv: jwe.iv,\n        protected: jwe.protected,\n        tag: jwe.tag,\n        unprotected: jwe.unprotected\n      }, key, options);\n    } catch (_a) {}\n  }\n\n  throw new JWEDecryptionFailed();\n}","map":{"version":3,"names":["flattenedDecrypt","JWEDecryptionFailed","JWEInvalid","isObject","generalDecrypt","jwe","key","options","Array","isArray","recipients","every","length","recipient","aad","ciphertext","encrypted_key","header","iv","protected","tag","unprotected","_a"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/jwe/general/decrypt.js"],"sourcesContent":["import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await flattenedDecrypt({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWEDecryptionFailed();\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,yBAAjC;AACA,SAASC,mBAAT,EAA8BC,UAA9B,QAAgD,sBAAhD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,eAAeC,cAAf,CAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,OAAxC,EAAiD;EACpD,IAAI,CAACJ,QAAQ,CAACE,GAAD,CAAb,EAAoB;IAChB,MAAM,IAAIH,UAAJ,CAAe,+BAAf,CAAN;EACH;;EACD,IAAI,CAACM,KAAK,CAACC,OAAN,CAAcJ,GAAG,CAACK,UAAlB,CAAD,IAAkC,CAACL,GAAG,CAACK,UAAJ,CAAeC,KAAf,CAAqBR,QAArB,CAAvC,EAAuE;IACnE,MAAM,IAAID,UAAJ,CAAe,0CAAf,CAAN;EACH;;EACD,IAAI,CAACG,GAAG,CAACK,UAAJ,CAAeE,MAApB,EAA4B;IACxB,MAAM,IAAIV,UAAJ,CAAe,+BAAf,CAAN;EACH;;EACD,KAAK,MAAMW,SAAX,IAAwBR,GAAG,CAACK,UAA5B,EAAwC;IACpC,IAAI;MACA,OAAO,MAAMV,gBAAgB,CAAC;QAC1Bc,GAAG,EAAET,GAAG,CAACS,GADiB;QAE1BC,UAAU,EAAEV,GAAG,CAACU,UAFU;QAG1BC,aAAa,EAAEH,SAAS,CAACG,aAHC;QAI1BC,MAAM,EAAEJ,SAAS,CAACI,MAJQ;QAK1BC,EAAE,EAAEb,GAAG,CAACa,EALkB;QAM1BC,SAAS,EAAEd,GAAG,CAACc,SANW;QAO1BC,GAAG,EAAEf,GAAG,CAACe,GAPiB;QAQ1BC,WAAW,EAAEhB,GAAG,CAACgB;MARS,CAAD,EAS1Bf,GAT0B,EASrBC,OATqB,CAA7B;IAUH,CAXD,CAYA,OAAOe,EAAP,EAAW,CACV;EACJ;;EACD,MAAM,IAAIrB,mBAAJ,EAAN;AACH"},"metadata":{},"sourceType":"module"}