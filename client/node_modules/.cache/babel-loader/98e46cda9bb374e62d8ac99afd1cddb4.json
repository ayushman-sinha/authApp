{"ast":null,"code":"import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n  constructor(payload) {\n    this._flattened = new FlattenedSign(payload);\n  }\n\n  setProtectedHeader(protectedHeader) {\n    this._flattened.setProtectedHeader(protectedHeader);\n\n    return this;\n  }\n\n  async sign(key, options) {\n    const jws = await this._flattened.sign(key, options);\n\n    if (jws.payload === undefined) {\n      throw new TypeError('use the flattened module for creating JWS with b64: false');\n    }\n\n    return `${jws.protected}.${jws.payload}.${jws.signature}`;\n  }\n\n}","map":{"version":3,"names":["FlattenedSign","CompactSign","constructor","payload","_flattened","setProtectedHeader","protectedHeader","sign","key","options","jws","undefined","TypeError","protected","signature"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/jws/compact/sign.js"],"sourcesContent":["import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,sBAA9B;AACA,OAAO,MAAMC,WAAN,CAAkB;EACrBC,WAAW,CAACC,OAAD,EAAU;IACjB,KAAKC,UAAL,GAAkB,IAAIJ,aAAJ,CAAkBG,OAAlB,CAAlB;EACH;;EACDE,kBAAkB,CAACC,eAAD,EAAkB;IAChC,KAAKF,UAAL,CAAgBC,kBAAhB,CAAmCC,eAAnC;;IACA,OAAO,IAAP;EACH;;EACS,MAAJC,IAAI,CAACC,GAAD,EAAMC,OAAN,EAAe;IACrB,MAAMC,GAAG,GAAG,MAAM,KAAKN,UAAL,CAAgBG,IAAhB,CAAqBC,GAArB,EAA0BC,OAA1B,CAAlB;;IACA,IAAIC,GAAG,CAACP,OAAJ,KAAgBQ,SAApB,EAA+B;MAC3B,MAAM,IAAIC,SAAJ,CAAc,2DAAd,CAAN;IACH;;IACD,OAAQ,GAAEF,GAAG,CAACG,SAAU,IAAGH,GAAG,CAACP,OAAQ,IAAGO,GAAG,CAACI,SAAU,EAAxD;EACH;;AAdoB"},"metadata":{},"sourceType":"module"}