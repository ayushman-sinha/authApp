{"ast":null,"code":"import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\n\nconst check = (value, description) => {\n  if (typeof value !== 'string' || !value) {\n    throw new JWKInvalid(`${description} missing or invalid`);\n  }\n};\n\nexport async function calculateJwkThumbprint(jwk) {\n  let digestAlgorithm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sha256';\n\n  if (!isObject(jwk)) {\n    throw new TypeError('JWK must be an object');\n  }\n\n  if (digestAlgorithm !== 'sha256' && digestAlgorithm !== 'sha384' && digestAlgorithm !== 'sha512') {\n    throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n  }\n\n  let components;\n\n  switch (jwk.kty) {\n    case 'EC':\n      check(jwk.crv, '\"crv\" (Curve) Parameter');\n      check(jwk.x, '\"x\" (X Coordinate) Parameter');\n      check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n      components = {\n        crv: jwk.crv,\n        kty: jwk.kty,\n        x: jwk.x,\n        y: jwk.y\n      };\n      break;\n\n    case 'OKP':\n      check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n      check(jwk.x, '\"x\" (Public Key) Parameter');\n      components = {\n        crv: jwk.crv,\n        kty: jwk.kty,\n        x: jwk.x\n      };\n      break;\n\n    case 'RSA':\n      check(jwk.e, '\"e\" (Exponent) Parameter');\n      check(jwk.n, '\"n\" (Modulus) Parameter');\n      components = {\n        e: jwk.e,\n        kty: jwk.kty,\n        n: jwk.n\n      };\n      break;\n\n    case 'oct':\n      check(jwk.k, '\"k\" (Key Value) Parameter');\n      components = {\n        k: jwk.k,\n        kty: jwk.kty\n      };\n      break;\n\n    default:\n      throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n  }\n\n  const data = encoder.encode(JSON.stringify(components));\n  return base64url(await digest(digestAlgorithm, data));\n}","map":{"version":3,"names":["digest","encode","base64url","JOSENotSupported","JWKInvalid","encoder","isObject","check","value","description","calculateJwkThumbprint","jwk","digestAlgorithm","TypeError","components","kty","crv","x","y","e","n","k","data","JSON","stringify"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/jwk/thumbprint.js"],"sourcesContent":["import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm = 'sha256') {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAM,IAAIC,SAAnB,QAAoC,yBAApC;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AACA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;EAClC,IAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6B,CAACA,KAAlC,EAAyC;IACrC,MAAM,IAAIJ,UAAJ,CAAgB,GAAEK,WAAY,qBAA9B,CAAN;EACH;AACJ,CAJD;;AAKA,OAAO,eAAeC,sBAAf,CAAsCC,GAAtC,EAAuE;EAAA,IAA5BC,eAA4B,uEAAV,QAAU;;EAC1E,IAAI,CAACN,QAAQ,CAACK,GAAD,CAAb,EAAoB;IAChB,MAAM,IAAIE,SAAJ,CAAc,uBAAd,CAAN;EACH;;EACD,IAAID,eAAe,KAAK,QAApB,IACAA,eAAe,KAAK,QADpB,IAEAA,eAAe,KAAK,QAFxB,EAEkC;IAC9B,MAAM,IAAIC,SAAJ,CAAc,6DAAd,CAAN;EACH;;EACD,IAAIC,UAAJ;;EACA,QAAQH,GAAG,CAACI,GAAZ;IACI,KAAK,IAAL;MACIR,KAAK,CAACI,GAAG,CAACK,GAAL,EAAU,yBAAV,CAAL;MACAT,KAAK,CAACI,GAAG,CAACM,CAAL,EAAQ,8BAAR,CAAL;MACAV,KAAK,CAACI,GAAG,CAACO,CAAL,EAAQ,8BAAR,CAAL;MACAJ,UAAU,GAAG;QAAEE,GAAG,EAAEL,GAAG,CAACK,GAAX;QAAgBD,GAAG,EAAEJ,GAAG,CAACI,GAAzB;QAA8BE,CAAC,EAAEN,GAAG,CAACM,CAArC;QAAwCC,CAAC,EAAEP,GAAG,CAACO;MAA/C,CAAb;MACA;;IACJ,KAAK,KAAL;MACIX,KAAK,CAACI,GAAG,CAACK,GAAL,EAAU,uCAAV,CAAL;MACAT,KAAK,CAACI,GAAG,CAACM,CAAL,EAAQ,4BAAR,CAAL;MACAH,UAAU,GAAG;QAAEE,GAAG,EAAEL,GAAG,CAACK,GAAX;QAAgBD,GAAG,EAAEJ,GAAG,CAACI,GAAzB;QAA8BE,CAAC,EAAEN,GAAG,CAACM;MAArC,CAAb;MACA;;IACJ,KAAK,KAAL;MACIV,KAAK,CAACI,GAAG,CAACQ,CAAL,EAAQ,0BAAR,CAAL;MACAZ,KAAK,CAACI,GAAG,CAACS,CAAL,EAAQ,yBAAR,CAAL;MACAN,UAAU,GAAG;QAAEK,CAAC,EAAER,GAAG,CAACQ,CAAT;QAAYJ,GAAG,EAAEJ,GAAG,CAACI,GAArB;QAA0BK,CAAC,EAAET,GAAG,CAACS;MAAjC,CAAb;MACA;;IACJ,KAAK,KAAL;MACIb,KAAK,CAACI,GAAG,CAACU,CAAL,EAAQ,2BAAR,CAAL;MACAP,UAAU,GAAG;QAAEO,CAAC,EAAEV,GAAG,CAACU,CAAT;QAAYN,GAAG,EAAEJ,GAAG,CAACI;MAArB,CAAb;MACA;;IACJ;MACI,MAAM,IAAIZ,gBAAJ,CAAqB,mDAArB,CAAN;EAtBR;;EAwBA,MAAMmB,IAAI,GAAGjB,OAAO,CAACJ,MAAR,CAAesB,IAAI,CAACC,SAAL,CAAeV,UAAf,CAAf,CAAb;EACA,OAAOZ,SAAS,CAAC,MAAMF,MAAM,CAACY,eAAD,EAAkBU,IAAlB,CAAb,CAAhB;AACH"},"metadata":{},"sourceType":"module"}