{"ast":null,"code":"import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n  constructor(plaintext) {\n    this._flattened = new FlattenedEncrypt(plaintext);\n  }\n\n  setContentEncryptionKey(cek) {\n    this._flattened.setContentEncryptionKey(cek);\n\n    return this;\n  }\n\n  setInitializationVector(iv) {\n    this._flattened.setInitializationVector(iv);\n\n    return this;\n  }\n\n  setProtectedHeader(protectedHeader) {\n    this._flattened.setProtectedHeader(protectedHeader);\n\n    return this;\n  }\n\n  setKeyManagementParameters(parameters) {\n    this._flattened.setKeyManagementParameters(parameters);\n\n    return this;\n  }\n\n  async encrypt(key, options) {\n    const jwe = await this._flattened.encrypt(key, options);\n    return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n  }\n\n}","map":{"version":3,"names":["FlattenedEncrypt","CompactEncrypt","constructor","plaintext","_flattened","setContentEncryptionKey","cek","setInitializationVector","iv","setProtectedHeader","protectedHeader","setKeyManagementParameters","parameters","encrypt","key","options","jwe","protected","encrypted_key","ciphertext","tag","join"],"sources":["D:/React/authApp/client/node_modules/jose/dist/browser/jwe/compact/encrypt.js"],"sourcesContent":["import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,yBAAjC;AACA,OAAO,MAAMC,cAAN,CAAqB;EACxBC,WAAW,CAACC,SAAD,EAAY;IACnB,KAAKC,UAAL,GAAkB,IAAIJ,gBAAJ,CAAqBG,SAArB,CAAlB;EACH;;EACDE,uBAAuB,CAACC,GAAD,EAAM;IACzB,KAAKF,UAAL,CAAgBC,uBAAhB,CAAwCC,GAAxC;;IACA,OAAO,IAAP;EACH;;EACDC,uBAAuB,CAACC,EAAD,EAAK;IACxB,KAAKJ,UAAL,CAAgBG,uBAAhB,CAAwCC,EAAxC;;IACA,OAAO,IAAP;EACH;;EACDC,kBAAkB,CAACC,eAAD,EAAkB;IAChC,KAAKN,UAAL,CAAgBK,kBAAhB,CAAmCC,eAAnC;;IACA,OAAO,IAAP;EACH;;EACDC,0BAA0B,CAACC,UAAD,EAAa;IACnC,KAAKR,UAAL,CAAgBO,0BAAhB,CAA2CC,UAA3C;;IACA,OAAO,IAAP;EACH;;EACY,MAAPC,OAAO,CAACC,GAAD,EAAMC,OAAN,EAAe;IACxB,MAAMC,GAAG,GAAG,MAAM,KAAKZ,UAAL,CAAgBS,OAAhB,CAAwBC,GAAxB,EAA6BC,OAA7B,CAAlB;IACA,OAAO,CAACC,GAAG,CAACC,SAAL,EAAgBD,GAAG,CAACE,aAApB,EAAmCF,GAAG,CAACR,EAAvC,EAA2CQ,GAAG,CAACG,UAA/C,EAA2DH,GAAG,CAACI,GAA/D,EAAoEC,IAApE,CAAyE,GAAzE,CAAP;EACH;;AAvBuB"},"metadata":{},"sourceType":"module"}